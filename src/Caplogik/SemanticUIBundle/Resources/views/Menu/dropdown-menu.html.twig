{% extends 'knp_menu_base.html.twig' %}

{% block compressed_root %}
    {% spaceless %}
        {{ block('root') }}
    {% endspaceless %}
{% endblock %}

{% block root %}
    {{ block('menu') -}}
{% endblock %}

{% block menu %}
    {% import _self as _ %}

    {% if item.hasChildren %}
        {%- set attr = {}|merge(item.childrenAttributes) -%}
        {%- set attr = attr|merge({'class':  'ui ' ~ (attr.class|default('') ~ ' vertical menu')|trim}) -%}

        <div {{ _.attributes(attr) }}>
            {% for child in item.children %}
                {{ _.item(child, options, matcher, app) }}
            {% endfor %}
        </div>
    {% endif %}


{% endblock %}

{% block item %}
    {% import _self as _ %}

    {% if item.displayed %}
        {%- set attr = {}|merge(item.attributes) -%}
        {%- set attr = attr|merge({'class':  (attr.class|default('') ~ ' item')|trim}) -%}

        {% if item.hasChildren() %}
            {%- set attr = attr|merge({'class': ('ui simple dropdown ' ~ attr.class|default(''))|trim}) -%}

            <div {{ _.attributes(attr) }}>
                {{ block('label') }}
                <i class="dropdown icon"></i>

                {{ block('menu') }}
            </div>
        {% else %}
            {% if matcher.isCurrent(item) or matcher.isAncestor(item) %}
                {%- set attr = attr|merge({'class': ('active ' ~ attr.class|default(''))|trim}) -%}
            {% endif %}

            {% if item.uri is not empty %}
                {% set attr = attr|merge({'href': item.uri}) %}
            {% endif %}

            <a {{ _.attributes(attr) }}>{{ block('label') }}</a>
        {% endif %}
    {% endif %}
{% endblock %}

{% block label %}
    {% if options.allow_safe_labels and item.getExtra('safe_label', false) %}
        {{ item.label|raw }}
    {% else %}
        {{ item.label }}
    {% endif %}
{% endblock %}

{# encapsulation #}
{% macro menu(item, options, matcher, app) %}
    {{ block('menu') }}
{% endmacro %}

{% macro item(item, options, matcher, app) %}
    {{ block('item') }}
{% endmacro %}

{# util #}
{% macro attributes(attributes) %}
    {% for name, value in attributes %}
        {%- if value is not none and value is not same as(false) -%}
            {{- ' %s="%s"'|format(name, value is same as(true) ? name|e : value|e)|raw -}}
        {%- endif -%}
    {%- endfor -%}
{% endmacro %}
